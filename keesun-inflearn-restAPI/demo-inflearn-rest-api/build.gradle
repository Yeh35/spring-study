plugins {
	id 'org.springframework.boot' version '2.3.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'org.asciidoctor.convert' version '1.5.8'
	id 'java'
}

group = 'me.sangoh'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

ext {
	snippetsDir = file('build/generated-snippets') // document 설정
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

test {
	outputs.dir snippetsDir // document 설정
	useJUnitPlatform()
}

// document 설정 start
asciidoctor {
	dependsOn test
	inputs.dir snippetsDir
}

// bootJar Task 설정
bootJar {
	dependsOn asciidoctor
//	print "${asciidoctor.outputDir}/html5 ---> static/docs"
	copy {
		from "${asciidoctor.outputDir}/html5"
		into "build/resources/main/static/docs"
	}
}
// document 설정 end

repositories {
	mavenCentral()
}

dependencies {
	//Spring
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	//Spring Test
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

	//DB
//	implementation 'mysql:mysql-connector-java'
	implementation 'com.h2database:h2'
//	testRuntimeOnly 'com.h2database:h2'

	//Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	//document
	asciidoctor 'org.springframework.restdocs:spring-restdocs-asciidoctor:2.0.2.RELEASE'

	//Other
	implementation 'org.modelmapper:modelmapper:2.3.1'
}
